//In withdrawal pattern, we'll reset the pending amount before each transfer. It will ensure that only caller contract fails.


pragma solidity ^0.5.0;
contract withdrawal {
    address public owner;
    uint256 public value;

    mapping (address => uint256) public unspent;

    constructor() public payable {
        owner = msg.sender;
        value = msg.value;
    }

    function isCheck() external payable returns(bool) {
        if( msg.value >= value) {
            unspent[owner] += msg.value;
            value = msg.value;
            owner = msg.sender;
            return true;
        }
        else {
            return false;
        }
    }

    function changeOwner() public {
        uint amount = unspent[msg.sender];
        unspent[msg.sender] = 0;
        msg.sender.transfer(amount);

    }
}
